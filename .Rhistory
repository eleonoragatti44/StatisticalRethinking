globe.qa <- quap(
alist(
W ~ dbinom( W+L ,p) , # binomial likelihood
p ~ dunif(0,1) # uniform prior
) ,
data=list(W=3,L=11) )
precis(globe.qa)
globe.qa <- quap(
alist(
W ~ dbinom( W+L ,p) , # binomial likelihood
p ~ dnorm(0,1) # uniform prior
) ,
data=list(W=3,L=11) )
globe.qa <- quap(
alist(
W ~ dbinom( W+L ,p) , # binomial likelihood
p ~ dnorm(0,1) # uniform prior
) ,
data=list(W=3,L=11) )
globe.qa <- quap(
alist(
W ~ dbinom( W+L ,p) , # binomial likelihood
p ~ dnorm() # uniform prior
) ,
data=list(W=3,L=11) )
globe.qa <- quap(
alist(
W ~ dbinom( W+L ,p) , # binomial likelihood
p ~ dnorm(0.7) # uniform prior
) ,
data=list(W=3,L=11) )
globe.qa <- quap(
alist(
W ~ dbinom( W+L ,p) , # binomial likelihood
p ~ dnorm(0.5, 0.1) # uniform prior
) ,
data=list(W=3,L=11) )
precis(globe.qa)
globe.qa <- quap(
alist(
W ~ dbinom( W+L ,p) , # binomial likelihood
p ~ dnorm(0.2, 0.1) # uniform prior
) ,
data=list(W=3,L=11) )
precis(globe.qa)
W <- 6
L <- 3
curve( dbeta( x , W+1 , L+1 ) , from=0 , to=1 )
curve( dnorm( x , 0.67 , 0.16 ) , lty=2 , add=TRUE )
globe.qa <- quap(
alist(
W ~ dbinom( W+L ,p) , # binomial likelihood
p ~ dunif(0,1) # uniform prior
) ,
data=list(W=3,L=11) )
precis(globe.qa)
globe.qa <- quap(
alist(
W ~ dbinom( W+L ,p) , # binomial likelihood
p ~ dunif(0,1) # uniform prior
) ,
data=list(W=6,L=9) )
precis(globe.qa)
globe.qa <- quap(
alist(
W ~ dbinom( W+L ,p) , # binomial likelihood
p ~ dunif(0,1) # uniform prior
) ,
data=list(W=6,L=3) )
precis(globe.qa)
?rnorm
p[i] <- ifelse(runif(1) < q1/q0, p_new, p[i-1])
n_samples <- 1000
p <- rep(NA, n_samples)
p[1] <- 0.5
W <- 6
L <- 3
for (i in 2:n_samples) {
p_new <- rnorm(1, p[i-1], 0.1)
if (p_new < 0) p_new <- abs(p_new)
if (p_new > 1) p_new <- 2 - p_new
q0 <- dbinom(W, W+L, p[i-1])
q1 <- dbinom(W, W+L, p_new)
p[i] <- ifelse(runif(1) < q1/q0, p_new, p[i-1])
}
dens( p , xlim=c(0,1) )
curve( dbeta( x , W+1 , L+1 ) , lty=2 , add=TRUE )
n_samples <- 10000
p <- rep(NA, n_samples)
p[1] <- 0.5
W <- 6
L <- 3
for (i in 2:n_samples) {
p_new <- rnorm(1, p[i-1], 0.1)
if (p_new < 0) p_new <- abs(p_new)
if (p_new > 1) p_new <- 2 - p_new
q0 <- dbinom(W, W+L, p[i-1])
q1 <- dbinom(W, W+L, p_new)
p[i] <- ifelse(runif(1) < q1/q0, p_new, p[i-1])
}
dens( p , xlim=c(0,1) )
curve( dbeta( x , W+1 , L+1 ) , lty=2 , add=TRUE )
n_samples <- 100000
p <- rep(NA, n_samples)
p[1] <- 0.5
W <- 6
L <- 3
for (i in 2:n_samples) {
p_new <- rnorm(1, p[i-1], 0.1)
if (p_new < 0) p_new <- abs(p_new)
if (p_new > 1) p_new <- 2 - p_new
q0 <- dbinom(W, W+L, p[i-1])
q1 <- dbinom(W, W+L, p_new)
p[i] <- ifelse(runif(1) < q1/q0, p_new, p[i-1])
}
dens( p , xlim=c(0,1) )
curve( dbeta( x , W+1 , L+1 ) , lty=2 , add=TRUE )
n_samples <- 1000000
p <- rep(NA, n_samples)
p[1] <- 0.5
W <- 6
L <- 3
for (i in 2:n_samples) {
p_new <- rnorm(1, p[i-1], 0.1)
if (p_new < 0) p_new <- abs(p_new)
if (p_new > 1) p_new <- 2 - p_new
q0 <- dbinom(W, W+L, p[i-1])
q1 <- dbinom(W, W+L, p_new)
p[i] <- ifelse(runif(1) < q1/q0, p_new, p[i-1])
}
dens( p , xlim=c(0,1) )
curve( dbeta( x , W+1 , L+1 ) , lty=2 , add=TRUE )
n_samples <- 10
p <- rep(NA, n_samples)
p[1] <- 0.5
W <- 6
L <- 3
for (i in 2:n_samples) {
p_new <- rnorm(1, p[i-1], 0.1)
if (p_new < 0) p_new <- abs(p_new)
if (p_new > 1) p_new <- 2 - p_new
q0 <- dbinom(W, W+L, p[i-1])
q1 <- dbinom(W, W+L, p_new)
p[i] <- ifelse(runif(1) < q1/q0, p_new, p[i-1])
}
dens( p , xlim=c(0,1) )
curve( dbeta( x , W+1 , L+1 ) , lty=2 , add=TRUE )
n_samples <- 30
p <- rep(NA, n_samples)
p[1] <- 0.5
W <- 6
L <- 3
for (i in 2:n_samples) {
p_new <- rnorm(1, p[i-1], 0.1)
if (p_new < 0) p_new <- abs(p_new)
if (p_new > 1) p_new <- 2 - p_new
q0 <- dbinom(W, W+L, p[i-1])
q1 <- dbinom(W, W+L, p_new)
p[i] <- ifelse(runif(1) < q1/q0, p_new, p[i-1])
}
dens( p , xlim=c(0,1) )
curve( dbeta( x , W+1 , L+1 ) , lty=2 , add=TRUE )
n_samples <- 100
p <- rep(NA, n_samples)
p[1] <- 0.5
W <- 6
L <- 3
for (i in 2:n_samples) {
p_new <- rnorm(1, p[i-1], 0.1)
if (p_new < 0) p_new <- abs(p_new)
if (p_new > 1) p_new <- 2 - p_new
q0 <- dbinom(W, W+L, p[i-1])
q1 <- dbinom(W, W+L, p_new)
p[i] <- ifelse(runif(1) < q1/q0, p_new, p[i-1])
}
dens( p , xlim=c(0,1) )
curve( dbeta( x , W+1 , L+1 ) , lty=2 , add=TRUE )
n_samples <- 1000
p <- rep(NA, n_samples)
p[1] <- 0.5
W <- 6
L <- 3
for (i in 2:n_samples) {
p_new <- rnorm(1, p[i-1], 0.1)
if (p_new < 0) p_new <- abs(p_new)
if (p_new > 1) p_new <- 2 - p_new
q0 <- dbinom(W, W+L, p[i-1])
q1 <- dbinom(W, W+L, p_new)
p[i] <- ifelse(runif(1) < q1/q0, p_new, p[i-1])
}
dens( p , xlim=c(0,1) )
curve( dbeta( x , W+1 , L+1 ) , lty=2 , add=TRUE )
n_samples <- 1000
p <- rep(NA, n_samples)
p[1] <- 0.5
W <- 6
L <- 3
for (i in 2:n_samples) {
p_new <- rnorm(1, p[i-1], 0.1)
if (p_new < 0) p_new <- abs(p_new)
if (p_new > 1) p_new <- 2 - p_new
q0 <- dbinom(W, W+L, p[i-1])
q1 <- dbinom(W, W+L, p_new)
p[i] <- ifelse(runif(1) < q1/q0, p_new, p[i-1])
}
dens( p , xlim=c(0,1) )
curve( dbeta( x , W+1 , L+1 ) , lty=2 , add=TRUE )
library(rethinking)
q0
# we define a nice well spaced grid
p_grid <- seq(from = 0, to = 1, length.out = 1000)
p_grid
# uniform prior
prior <- rep(1/1000, 1000)
# calculating posterior using grid approx
p_grid <- seq(from = 0, to = 1, length.out = 1000)
prior <- rep(1/1000, 1000)
prob_data <- dbinom(6, 9, prob=p_grid)
posterior <- prob_data * prior
posterior <- posterior / sum(posterior)
plot(p_grid, posterior, type="b", xlab="probability of water", ylab="posterior probability")
# sample from posterior
samples <- sample(p_grid, prob=posterior, size=1e4, replace=TRUE)
plot(sample)
plot(samples)
dens(samples)
# calculating posterior using grid approx
p_grid <- seq(from = 0, to = 1, length.out = 10000)
prior <- rep(1/10000, 10000)
# calculating posterior using grid approx
p_grid <- seq(from = 0, to = 1, length.out = 1000)
prior <- rep(1/1000, 1000)
prob_data <- dbinom(6, 9, prob=p_grid)
posterior <- prob_data * prior
posterior <- posterior / sum(posterior)
# sample from posterior
samples <- sample(p_grid, prob=posterior, size=1e5, replace=TRUE)
plot(samples)
dens(samples)
# sample from posterior
samples <- sample(p_grid, prob=posterior, size=1e4, replace=TRUE)
plot(samples)
dens(samples)
# sample from posterior
samples <- sample(p_grid, prob=posterior, size=1e6, replace=TRUE)
plot(samples)
dens(samples)
dens(samples)
# sample from posterior
samples <- sample(p_grid, prob=posterior, size=1e4, replace=TRUE)
plot(samples)
dens(samples)
# boundaries and intervals
sum(posterior[p_grid<0.5])
sum(samples[p_grid<0.5]) / 1e4
sum(samples<0.5) / 1e4
HDPI(samples, 0.5)
HPDI(samples, 0.5)
rbinom(10,2,0.7)
?rbinom
rbinom(10,10,0.7)
# sampling to simulate prediction
dummy_w <- rbinom(1e5, size=2, 0.7)
table(dummy_w)/1e5
# sampling to simulate prediction
dummy_w <- rbinom(1e5, size=9, 0.7)
table(dummy_w)/1e5
simplehist(dummy_w, xlab="dummy water count",)
library(rethinking)
p_grid <- seq(from = 0, to = 1, length.out = 100)
prior <- rep(1/100, 100)
likelihoood <- dbinom(3, 14, prob=p_grid)
unstd.posterior <- likelihoood * prior
posterior <- unstd.posterior / sum(unstd.posterior)
plot(p_grid, posterior, type="b", xlab="probability of water", ylab="posterior probability")
unstd.posterior <- likelihoood * prior
library(rethinking)
p_grid <- seq(from = 0, to = 1, length.out = 100)
prior <- rep(1/100, 100)
likelihoood <- dbinom(3, 14, prob=p_grid)
unstd.posterior <- likelihoood * prior
posterior <- unstd.posterior / sum(unstd.posterior)
plot(p_grid, posterior, type="b", xlab="probability of water", ylab="posterior probability")
library(rethinking)
p_grid <- seq(from = 0, to = 1, length.out = 100)
prior <- rep(1/100, 100)
likelihoood <- dbinom(3, 14, prob=p_grid)
unstd.posterior <- likelihoood * prior
posterior <- unstd.posterior / sum(unstd.posterior)
plot(p_grid, posterior, type="b", xlab="probability of water", ylab="posterior probability")
p_grid <- seq(from = 0, to = 1, length.out = 100)
prior <- rep(1/100, 100)
likelihoood <- dbinom(3, 14, prob=p_grid)
unstd.posterior <- likelihoood * prior
posterior <- unstd.posterior / sum(unstd.posterior)
plot(p_grid, posterior, type="b", xlab="probability of water", ylab="posterior probability")
```{r}
posterior
samples <- sample(p_grid, prob=posterior, size=1e4, replace=TRUE)
w <- rbinom(1e4, size=5, prob=samples)
simplehist(w, xlab="dummy water count")
p_grid <- seq( from=0 , to=1 , length.out=1000 )
prior <- rep( 1 , 1000 )
likelihood <- dbinom( 6 , size=9 , prob=p_grid )
posterior <- likelihood * prior
posterior <- posterior / sum(posterior)
set.seed(100)
samples <- sample( p_grid , prob=posterior , size=1e4 , replace=TRUE )
sum(samples<0.2)/1e4
p_grid <- seq( from=0 , to=1 , length.out=1000 )
prior <- rep( 1 , 1000 )
likelihood <- dbinom( 6 , size=9 , prob=p_grid )
posterior <- likelihood * prior
posterior <- posterior / sum(posterior)
set.seed(100)
samples <- sample( p_grid , prob=posterior , size=1e4 , replace=TRUE )
p_grid <- seq( from=0 , to=1 , length.out=1000 )
prior <- rep( 1 , 1000 )
likelihood <- dbinom( 6 , size=9 , prob=p_grid )
posterior <- likelihood * prior
posterior <- posterior / sum(posterior)
set.seed(100)
samples <- sample( p_grid , prob=posterior , size=1e4 , replace=TRUE )
## Exercise 3E1
**Question:** How much posterior probability lies below $p=0.2$ ?
**Answer:**
```{r}
sum(samples<0.2)/1e4
samples<0.2
samples
sum(samples<0.2)/1e4
sprintf("%.6f", sum(samples<0.2)/1e4)
sprintf("%.4f", sum(samples<0.2)/1e4)
**Answer:**
sprintf("%.4f", sum(samples>0.8)/1e4)
sprintf("%.4f", sum(samples>0.8)/1e4)
sprintf("%.4f", sum(samples>0.2 & samples<0.8)/1e4)
quantile(samples, 0.2)
```{r}
quantile(samples, 0.2)
quantile(samples, 0.8)
HPDI(samples, prob=0.66)
PI(samples, prob=0.66)
```{r}
p_grid <- seq( from=0 , to=1 , length.out=1000 )
prior <- rep( 1 , 1000 )
likelihood <- dbinom( 6 , size=9 , prob=p_grid )
posterior <- likelihood * prior
posterior <- posterior / sum(posterior)
set.seed(100)
samples <- sample( p_grid , prob=posterior , size=1e4 , replace=TRUE )
sprintf("%.4f", sum(samples<0.2)/1e4)
sprintf("%.4f", sum(samples>0.8)/1e4)
sprintf("%.4f", sum(samples>0.2 & samples<0.8)/1e4)
quantile(samples, 0.2)
**Question:** Which values of $p$ contain $66 \%$ of the posterior probability, assuming equal posterior probability both below and above the interval?
**Question:** Which values of $p$ contain $66 \%$ of the posterior probability, assuming equal posterior probability both below and above the interval?
p_grid <- seq( from=0 , to=1 , length.out=1000 )
prior <- rep( 1 , 1000 )
likelihood <- dbinom( 6 , size=9 , prob=p_grid )
posterior <- likelihood * prior
posterior <- posterior / sum(posterior)
set.seed(100)
samples <- sample( p_grid , prob=posterior , size=1e4 , replace=TRUE )
sprintf("%.4f", sum(samples<0.2)/1e4)
sprintf("%.4f", sum(samples>0.8)/1e4)
sprintf("%.4f", sum(samples>0.2 & samples<0.8)/1e4)
quantile(samples, 0.2)
quantile(samples, 0.8)
HPDI(samples, prob=0.66)
PI(samples, prob=0.66)
library(rethinking)
p_grid <- seq(from = 0, to = 1, length.out = 100)
prior <- rep(1/100, 100)
likelihoood <- dbinom(3, 14, prob=p_grid)
unstd.posterior <- likelihoood * prior
posterior <- unstd.posterior / sum(unstd.posterior)
plot(p_grid, posterior, type="b", xlab="probability of water", ylab="posterior probability")
samples <- sample(p_grid, prob=posterior, size=1e4, replace=TRUE)
w <- rbinom(1e4, size=5, prob=samples)
simplehist(w, xlab="dummy water count")
---
title: "Ch2-3"
In this notebook, you will find my solutions to some exercises from Chapter 2 and 3 of *Statistical Rethinking* and the assigned exercises from [this](https://github.com/bjbarrett/stat_rethinking_2025/tree/main) course.
# Chapter 2
## Exercise 2E1
**Question:** Which of the expressions below correspond to the statement: *the probability of rain on Monday*?
1.  Pr(rain)
**Answer: (2)** Pr(rain\|Monday) and **(4)** Pr(rain, Monday)/Pr(Monday)
**Explanation:**
Option (1) is the unconditional probability of rain on any day
Option (3) is the probability that it is Monday given that it is raining
Option (4) Pr(rain, Monday)/Pr(Monday) is mathematically equivalent to Pr(rain\|Monday) by the definition of conditional probability, so this is also correct.
Both options (2) and (4) are correct.
## Exercise 2E2
**Question:** Which of the following statements corresponds to the expression: Pr(Monday\|rain)?
1.  The probability of rain on Monday.
**Answer: (3)** The probability that it is Monday, given that it is raining.
## Exercise 2E3
**Question:** Which of the expressions below correspond to the statement: *the probability that it is Monday, given that it is raining*?
1.  Pr(Monday\|rain)
**Answer: (1)** Pr(Monday\|rain) and **(4)** Pr(rain\|Monday) Pr(Monday)/Pr(rain)
**Explanation:**
Option (1) is the direct notation for the conditional probability
Option (4) represents Bayes' theorem: Pr(Monday\|rain) = Pr(rain\|Monday) × Pr(Monday)/Pr(rain)
------------------------------------------------------------------------
# Chapter 3
```{r}
p_grid <- seq( from=0 , to=1 , length.out=1000 )
prior <- rep( 1 , 1000 )
likelihood <- dbinom( 6 , size=9 , prob=p_grid )
posterior <- likelihood * prior
posterior <- posterior / sum(posterior)
set.seed(100)
samples <- sample( p_grid , prob=posterior , size=1e4 , replace=TRUE )
p_grid <- seq( from=0 , to=1 , length.out=1000 )
prior <- rep( 1 , 1000 )
likelihood <- dbinom( 6 , size=9 , prob=p_grid )
posterior <- likelihood * prior
posterior <- posterior / sum(posterior)
set.seed(100)
samples <- sample( p_grid , prob=posterior , size=1e4 , replace=TRUE )
## Exercise 3E1
**Question:** How much posterior probability lies below $p=0.2$ ?
**Answer:**
```{r}
sprintf("%.4f", sum(samples<0.2)/1e4)
sprintf("%.4f", sum(samples<0.2)/1e4)
## Exercise 3E2
**Question:** How much posterior probability lies above $p=0.8$ ?
**Answer:**
```{r}
sprintf("%.4f", sum(samples>0.8)/1e4)
sprintf("%.4f", sum(samples>0.8)/1e4)
## Exercise 3E3
**Question:** How much posterior probability lies betwen $p=0.2$ and $p=0.8$ ?
**Answer:**
```{r}
sprintf("%.4f", sum(samples>0.2 & samples<0.8)/1e4)
sprintf("%.4f", sum(samples>0.2 & samples<0.8)/1e4)
sprintf("%.4f", sum(samples>0.2 & samples<0.8)/1e4)
## Exercise 3E4
**Question:** $20\%$ of the posterior probability lies below which value of $p$ ?
**Answer:**
```{r}
quantile(samples, 0.2)
quantile(samples, 0.2)
## Exercise 3E5
**Question:** $20\%$ of the posterior probability lies above which value of $p$?
**Answer:**
```{r}
quantile(samples, 0.8)
quantile(samples, 0.8)
## Exercise 3E6
**Question:** Which values of $p$ contain the narrowest interval equal to $66 \%$ of the posterior probability?
**Answer:**
```{r}
HPDI(samples, prob=0.66)
HPDI(samples, prob=0.66)
## Exercise 3E7
**Question:** Which values of $p$ contain $66 \%$ of the posterior probability, assuming equal posterior probability both below and above the interval?
**Answer:**
```{r}
PI(samples, prob=0.66)
PI(samples, prob=0.66)
------------------------------------------------------------------------
# Course Exercises
## Exercise 1
**Question:** Suppose the globe tossing data (Lecture 2, Chapter 2) had turned out to be 3 water and 11 land. Construct the posterior distribution.
**Answer:**
```{r}
library(rethinking)
p_grid <- seq(from = 0, to = 1, length.out = 100)
prior <- rep(1/100, 100)
likelihoood <- dbinom(3, 14, prob=p_grid)
unstd.posterior <- likelihoood * prior
posterior <- unstd.posterior / sum(unstd.posterior)
plot(p_grid, posterior, type="b", xlab="probability of water", ylab="posterior probability")
p_grid <- seq(from = 0, to = 1, length.out = 100)
prior <- rep(1/100, 100)
likelihoood <- dbinom(3, 14, prob=p_grid)
unstd.posterior <- likelihoood * prior
posterior <- unstd.posterior / sum(unstd.posterior)
plot(p_grid, posterior, type="b", xlab="probability of water", ylab="posterior probability")
```{r}
samples <- sample(p_grid, prob=posterior, size=1e4, replace=TRUE)
w <- rbinom(1e4, size=5, prob=samples)
simplehist(w, xlab="dummy water count")
p_grid <- seq( from=0 , to=1 , length.out=1000 )
prior <- rep( 1 , 1000 )
likelihood <- dbinom( 6 , size=9 , prob=p_grid )
posterior <- likelihood * prior
posterior <- posterior / sum(posterior)
set.seed(100)
samples <- sample( p_grid , prob=posterior , size=1e4 , replace=TRUE )
sprintf("%.4f", sum(samples<0.2)/1e4)
sprintf("%.4f", sum(samples>0.8)/1e4)
sprintf("%.4f", sum(samples>0.2 & samples<0.8)/1e4)
quantile(samples, 0.2)
quantile(samples, 0.8)
HPDI(samples, prob=0.66)
PI(samples, prob=0.66)
library(rethinking)
p_grid <- seq(from = 0, to = 1, length.out = 100)
prior <- rep(1/100, 100)
likelihoood <- dbinom(3, 14, prob=p_grid)
unstd.posterior <- likelihoood * prior
posterior <- unstd.posterior / sum(unstd.posterior)
plot(p_grid, posterior, type="b", xlab="probability of water", ylab="posterior probability")
samples <- sample(p_grid, prob=posterior, size=1e4, replace=TRUE)
w <- rbinom(1e4, size=5, prob=samples)
simplehist(w, xlab="dummy water count")
